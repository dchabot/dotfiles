# Smart pane switching with awareness of vim splits
#bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-h) || tmux select-pane -L"
#bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-j) || tmux select-pane -D"
#bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-k) || tmux select-pane -U"
#bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-l) || tmux select-pane -R"
#bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys 'C-\\') || tmux select-pane -l"

# vim-tmux-navigator - smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# instructs tmux to expect UTF-8 sequences
# setw -g utf8 on
# set -g status-utf8 on
# set-option -ga terminal-overrides ',*:enacs@:smacs@:rmacs@:acsc@'

# use ctrl-a instead
set-option -g prefix C-a
# ctrl-a a to last window
#bind-key C-a last-window

bind r source-file ~/.tmux.conf \; display "Reloaded!"
# Standard p/n for previous/next window
bind-key -r p previous-window
bind-key -r n next-window

# vi keys
setw -g mode-keys vi

# unbind p
# bind p paste-buffer
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-selection

# mouse mode enabled
set -g mouse on
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
bind -n WheelDownPane select-pane -t= \; send-keys -M

# renumber windows sequentially after closing any of them
set -g renumber-windows on

set -g default-terminal 'xterm-256color'
set -g history-limit 10000

#setw -g aggressive-resize on

# Set status bar
# import statusbar config generated via Tmuxline-vim
source-file $HOME/.tmuxline.conf
#source-file $HOME/dotfiles/tmux_statusline.conf
# This tmux statusbar config was created by tmuxline.vim
# # on Wed, 18 Feb 2015
#
# set -g status-bg "colour234"
# set -g message-command-fg "colour255"
# set -g status-justify "left"
# set -g status-left-length "100"
# set -g status "on"
# set -g pane-active-border-fg "colour190"
# set -g message-bg "colour238"
# set -g status-right-length "100"
# set -g status-right-attr "none"
# set -g message-fg "colour255"
# set -g message-command-bg "colour238"
# set -g status-attr "none"
# set -g status-utf8 "on"
# set -g pane-border-fg "colour238"
# set -g status-left-attr "none"
# setw -g window-status-fg "colour85"
# setw -g window-status-attr "none"
# setw -g window-status-activity-bg "colour234"
# setw -g window-status-activity-attr "none"
# setw -g window-status-activity-fg "colour190"
# setw -g window-status-separator ""
# setw -g window-status-bg "colour234"
# set -g status-left "#[fg=colour17,bg=colour190] #S #[fg=colour190,bg=colour234,nobold,nounderscore,noitalics]"
# set -g status-right "#[fg=colour238,bg=colour234,nobold,nounderscore,noitalics]#[fg=colour255,bg=colour238] %Y-%m-%d | %H:%M #[fg=colour190,bg=colour238,nobold,nounderscore,noitalics]#[fg=colour17,bg=colour190] #h "
# setw -g window-status-format "#[fg=colour85,bg=colour234] #I |#[fg=colour85,bg=colour234] #W "
# setw -g window-status-current-format "#[fg=colour234,bg=colour238,nobold,nounderscore,noitalics]#[fg=colour255,bg=colour238] #I |#[fg=colour255,bg=colour238] #W #[fg=colour238,bg=colour234,nobold,nounderscore,noitalics]"
set -g status-interval 1

#set -g status-bg green
#setw -g window-status-current-bg cyan
#setw -g window-status-current-attr bold
#set -g status-right '#7H | %F #[fg=black]%H:%M:%S#[default]'

bind-key C-t last-window
setw -g monitor-activity on
set -g visual-activity on

# needed for tmux version >= 1.9. Set new window/pane WD to that spawned from
bind '-' split-window -c "#{pane_current_path}"
bind | split-window -h -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"
